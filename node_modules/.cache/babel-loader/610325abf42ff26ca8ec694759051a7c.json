{"ast":null,"code":"import _slicedToArray from \"/Users/ricardonaoki/Desktop/test/FrontEnd/message/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ricardonaoki/Desktop/test/FrontEnd/message/src/containers/MessageList/index.js\";\nimport React, { useState, useEffect } from 'react'; // import{useSelector} from 'react-redux'\n\nimport api from '../../services/api.js'; // import { Container } from './styles';\n\nexport default function MessageList() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        comments = _useState2[0],\n        setComments = _useState2[1];\n\n  async function loadComments() {\n    const response = await api.get('/comments');\n    setComments(response.data);\n  }\n\n  useEffect(() => {\n    loadComments();\n  }, [comments]);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, comments.map(comment => {\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      key: comment.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, comment.text)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, comment.name)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, comment.dateAdded))));\n  })));\n}","map":{"version":3,"sources":["/Users/ricardonaoki/Desktop/test/FrontEnd/message/src/containers/MessageList/index.js"],"names":["React","useState","useEffect","api","MessageList","comments","setComments","loadComments","response","get","data","map","comment","id","text","name","dateAdded"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAwC,OAAxC,C,CACA;;AAEA,OAAOC,GAAP,MAAgB,uBAAhB,C,CACA;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA,oBAEJH,QAAQ,CAAC,EAAD,CAFJ;AAAA;AAAA,QAE7BI,QAF6B;AAAA,QAEnBC,WAFmB;;AAIpC,iBAAeC,YAAf,GAA8B;AAC5B,UAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAJ,CAAQ,WAAR,CAAvB;AACAH,IAAAA,WAAW,CAACE,QAAQ,CAACE,IAAV,CAAX;AACD;;AAEDR,EAAAA,SAAS,CAAC,MAAI;AACZK,IAAAA,YAAY;AACb,GAFQ,EAEP,CAACF,QAAD,CAFO,CAAT;AAKA,SACE,0CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAESA,QAAQ,CAACM,GAAT,CAAaC,OAAO,IAAI;AACvB,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACD;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,OAAO,CAACE,IAAb,CADF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,OAAO,CAACG,IAAb,CADD,CALF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCH,OAAO,CAACI,SADT,CADF,CATF,CADC,CADF;AAoBF,GArBC,CAFT,CADA,CADF;AA+BD","sourcesContent":["import React, {useState, useEffect}from 'react';\n// import{useSelector} from 'react-redux'\n\nimport api from '../../services/api.js'\n// import { Container } from './styles';\n\nexport default function MessageList() {\n\n  const [comments, setComments] = useState([]);\n\n  async function loadComments() {\n    const response = await api.get('/comments');\n    setComments(response.data);\n  }\n\n  useEffect(()=>{\n    loadComments();\n  },[comments])\n\n\n  return (\n    <>\n    <div>\n               \n            {comments.map(comment => {\n              return (\n                <ul>  \n               <li key={comment.id}>\n                 <div>\n                   <h3>{comment.text}\n                     </h3>\n                 </div>\n                 <div>\n                  <h3>{comment.name}\n                    </h3> \n                 </div>\n                 <div>\n                   <h3>\n                   {comment.dateAdded}\n                   </h3>\n                   \n                 </div>\n               </li>\n               </ul>  \n             )\n           })}\n         \n    </div>\n    \n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}